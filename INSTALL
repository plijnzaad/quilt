Installing: 

Should be straightforward on any Unix; everything is standard C.  It's
developed and tested mostly on Linux. I have no inclination to spend much
time making it work on other platforms, but I don't think it should be
difficult; it has been tested on other Unices and/or compilers: Digital Unix
(OSF1), SGI, Solaris, AIX.  Be prepared for a fair number of warnings,
especially when compiling on Digital Unix: they sometimes have their RAND_MAX
wrong. Switch off gcc's '-Wall' option if found iritating.

Around 2015 it also worked on Mac OSX, but it now segfaults (OSX 10.14.6
aka Mojave, gcc 4.8.5 20150623). I don't have access to a debugger to
investigate and fix this, sorry. I'd be very grateful if people can send
patches.

The build requires GNU make. Look at the files setup.sh.example, copy
and adjust, then source it so that BUILD_HOME points to the right place. In
most cases, the settings in setup.example are already fine, so you
can simply

  cd $git/quilt
  source setup.sh.example

This will set environment variables prefix and bindir (adjust if needed)
and it will also add $bindir to your $PATH.

With a bit of luck,

  make
  make test
  make install

will just work . 

The files ATOMS and RESIDUES are needed by the PDB reading routines; the
setup script copies them to your ~/.atoms and ~/.residues.  You can edit
these files to adjust atom radii etc. The format of these two files is
should be obvious; see also their comments.

After compiling/installing, all a user needs to do is add the $prefix to
their $PATH and things should be fine. If you have a directory where
your pdb files are stored, you can set PDBPATH as a colon separated path
to find them, but this is not necessary.

The 'API' is sort-of documented in the .h files and the files README.
The script 'scripts/one-structure.sh' does the full analysis of one
structure and may help clarify things. Any questions/suggestions, feel
free to ask me.

plijnzaad@gmail.com

